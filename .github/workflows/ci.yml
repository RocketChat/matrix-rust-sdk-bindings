name: CI
env:
  DEBUG: napi:*
  APP_NAME: package-template
  MACOSX_DEPLOYMENT_TARGET: '10.13'
'on':
  push:
    branches:
      - main
      - try-ci
    tags-ignore:
      - '**'
    paths-ignore:
      - '**/*.md'
      - LICENSE
      - '**/*.gitignore'
      - .editorconfig
      - docs/**
  pull_request: null
jobs:
  x86_64-apple-darwin:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
          toolchain: stable
          target: x86_64-apple-darwin
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 14
          #check-latest: true
          #cache: yarn
          architecture: x64
      - name: Enter folder
        run: |
          ls -l
          cd crates/matrix-sdk-crypto-nodejs/
          ls -l
          yarn install
          yarn build:release
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: bindings-x86_64-apple-darwin
          path: ${{ env.APP_NAME }}.*.node
          if-no-files-found: error

  test-linux-x64-gnu-binding:
    name: Test bindings on Linux-x64-gnu - node@${{ matrix.node }}
    needs:
      - x86_64-apple-darwin
    strategy:
      fail-fast: false
      matrix:
        node:
          - '12'
          - '14'
          - '16'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Enter folder
        run: cd crates/matrix-sdk-crypto-nodejs/
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
          check-latest: true
          cache: yarn
      - name: Cache NPM dependencies
        uses: actions/cache@v2
        with:
          path: node_modules
          key: npm-cache-test-linux-x64-gnu-${{ matrix.node }}-${{ hashFiles('yarn.lock') }}
      - name: Install dependencies
        run: yarn install --ignore-scripts --frozen-lockfile --registry https://registry.npmjs.org --network-timeout 300000
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: bindings-x86_64-unknown-linux-gnu
          path: .
      - name: List packages
        run: ls -R .
        shell: bash
      - name: Test bindings
        run: docker run --rm -v $(pwd):/build -w /build node:${{ matrix.node }}-slim yarn test

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs:
      - test-linux-x64-gnu-binding
    steps:
      - uses: actions/checkout@v2
      - name: Enter folder
        run: cd crates/matrix-sdk-crypto-nodejs/
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 16
          check-latest: true
          cache: yarn
      - name: Cache NPM dependencies
        uses: actions/cache@v2
        with:
          path: node_modules
          key: npm-cache-ubuntu-latest-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            npm-cache-
      - name: Install dependencies
        run: yarn install --ignore-scripts --frozen-lockfile --registry https://registry.npmjs.org --network-timeout 300000
      - name: Download all artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts
      - name: Move artifacts
        run: yarn artifacts
      - name: List packages
        run: ls -R ./npm
        shell: bash
      - name: Publish
        run: |
          if git log -1 --pretty=%B | grep "^[0-9]\+\.[0-9]\+\.[0-9]\+$";
          then
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
            npm publish --access public
          elif git log -1 --pretty=%B | grep "^[0-9]\+\.[0-9]\+\.[0-9]\+";
          then
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
            npm publish --tag next --access public
          else
            echo "Not a release, skipping publish"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
